{"ast":null,"code":"import _slicedToArray from \"/Users/naveenrella/Desktop/practice/queries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/naveenrella/Desktop/practice/queries/src/queries/queries.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'userId',\n  label: 'userId',\n  minWidth: 100\n}, {\n  id: 'employeeCode',\n  label: 'Employee code',\n  minWidth: 100\n}, {\n  id: 'jobTitleName',\n  label: 'Job Title',\n  minWidth: 100\n}, {\n  id: 'region',\n  label: 'State',\n  minWidth: 100\n}, {\n  id: 'firstName',\n  label: 'Firstname',\n  minWidth: 100\n}, {\n  id: 'lastName',\n  label: 'Lastname',\n  minWidth: 100\n}, {\n  id: 'phoneNumber',\n  label: 'Phone',\n  minWidth: 100\n}, {\n  id: 'emailAddress',\n  label: 'Email',\n  minWidth: 100\n}];\nconst rows = [{\n  \"userId\": \"rirani\",\n  \"jobTitleName\": \"Developer\",\n  \"firstName\": \"Romin\",\n  \"lastName\": \"Irani\",\n  \"preferredFullName\": \"Romin Irani\",\n  \"employeeCode\": \"E1\",\n  \"region\": \"CA\",\n  \"phoneNumber\": \"408-1234567\",\n  \"emailAddress\": \"romin.k.irani@gmail.com\"\n}, {\n  \"userId\": \"nirani\",\n  \"jobTitleName\": \"Developer\",\n  \"firstName\": \"Neil\",\n  \"lastName\": \"Irani\",\n  \"preferredFullName\": \"Neil Irani\",\n  \"employeeCode\": \"E2\",\n  \"region\": \"CA\",\n  \"phoneNumber\": \"408-1111111\",\n  \"emailAddress\": \"neilrirani@gmail.com\"\n}, {\n  \"userId\": \"thanks\",\n  \"jobTitleName\": \"Program Directory\",\n  \"firstName\": \"Tom\",\n  \"lastName\": \"Hanks\",\n  \"preferredFullName\": \"Tom Hanks\",\n  \"employeeCode\": \"E3\",\n  \"region\": \"CA\",\n  \"phoneNumber\": \"408-2222222\",\n  \"emailAddress\": \"tomhanks@gmail.com\"\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '80%'\n  },\n  tableWrapper: {\n    maxHeight: 440,\n    overflow: 'auto'\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/naveenrella/Desktop/practice/queries/src/queries/queries.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","columns","id","label","minWidth","rows","useStyles","root","width","tableWrapper","maxHeight","overflow","StickyHeadTable","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","align","slice","row","code","format","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'userId', label: 'userId', minWidth: 100 },\n  { id: 'employeeCode', label: 'Employee code', minWidth: 100 },\n\n  { id: 'jobTitleName', label: 'Job Title', minWidth: 100 },\n  { id: 'region', label: 'State', minWidth: 100 },\n  { id: 'firstName', label: 'Firstname', minWidth: 100 },\n  { id: 'lastName', label: 'Lastname', minWidth: 100 },\n  { id: 'phoneNumber', label: 'Phone', minWidth: 100 },\n  { id: 'emailAddress', label: 'Email', minWidth: 100 }\n];\n\n\nconst rows = [\n  {\n    \"userId\":\"rirani\",\n    \"jobTitleName\":\"Developer\",\n    \"firstName\":\"Romin\",\n    \"lastName\":\"Irani\",\n    \"preferredFullName\":\"Romin Irani\",\n    \"employeeCode\":\"E1\",\n    \"region\":\"CA\",\n    \"phoneNumber\":\"408-1234567\",\n    \"emailAddress\":\"romin.k.irani@gmail.com\"\n    },\n    {\n    \"userId\":\"nirani\",\n    \"jobTitleName\":\"Developer\",\n    \"firstName\":\"Neil\",\n    \"lastName\":\"Irani\",\n    \"preferredFullName\":\"Neil Irani\",\n    \"employeeCode\":\"E2\",\n    \"region\":\"CA\",\n    \"phoneNumber\":\"408-1111111\",\n    \"emailAddress\":\"neilrirani@gmail.com\"\n    },\n    {\n    \"userId\":\"thanks\",\n    \"jobTitleName\":\"Program Directory\",\n    \"firstName\":\"Tom\",\n    \"lastName\":\"Hanks\",\n    \"preferredFullName\":\"Tom Hanks\",\n    \"employeeCode\":\"E3\",\n    \"region\":\"CA\",\n    \"phoneNumber\":\"408-2222222\",\n    \"emailAddress\":\"tomhanks@gmail.com\"\n    }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '80%',\n  },\n  tableWrapper: {\n    maxHeight: 440,\n    overflow: 'auto',\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}{}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}